# SPDX-FileCopyrightText: (C) 2025 Tenstorrent AI ULC
# SPDX-License-Identifier: Apache-2.0

name: Checkin Tests

on:
  workflow_dispatch:
  workflow_call:
  push:
  pull_request:
    branches:
      - main

jobs:
  checkin-tests:
    runs-on: tt-beta-ubuntu-2204-large
    strategy:
      max-parallel: 5

    defaults:
      run:
        shell: bash -el {0}

    steps:
    - uses: actions/checkout@v4
    - uses: mamba-org/setup-micromamba@v2
      id: setup-mamba
      with:
        environment-file: envdev.yaml
        environment-name: poldevenv
        post-cleanup: all

    - name: check-micromamba-config     # Ensure default channels are not being used
      run: |
        micromamba info
        micromamba list

    - name: Run Unit and Coverage Tests
      run: | 
        coverage erase
        coverage run -m pytest -m "not tools_secondary" --junitxml __ci/xml/junit.xml
        coverage combine
        coverage report 
        coverage html -d __ci/html/
        coverage xml -o __ci/xml/coverage.xml
    - name: Run Checkin Tests
      if: always()
      run: |
        python checkin_tests.py static
    - name: Run standalone workload tests
      if: always()
      run: |
        for test in tests/test_workloads/test_*.py; do
          python -m pytest $test
        done
    - name: Check license and copyright
      if: always()
      run: |
          python tools/spdxchecker.py --ignore .github/spdxchecker-ignore.yml --allowed-licenses Apache-2.0 --allowed-copyright "Tenstorrent AI ULC"

    - name: Upload artifacts
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: dist-wo-onnxdumps
        path: |
           .coverage
           __RUN_TESTS
           !__RUN_TESTS/**/*.onnx
    
  userenv-tests:
    runs-on: tt-beta-ubuntu-2204-large
    strategy:
      max-parallel: 5

    defaults:
      run:
        shell: bash -el {0}

    steps:
    - uses: actions/checkout@v4
    - uses: mamba-org/setup-micromamba@v2
      id: userenv-setup-mamba
      with:
        environment-file: environment.yaml
        environment-name: poluserenv
        post-cleanup: all

    - name: userenv-check-micromamba-config     # Ensure default channels are not being used
      run: |
        micromamba info
        micromamba list

    - name: userenv-checkin-tests
      if: always()
      run: |
        python checkin_tests.py workloads
    - name: Upload artifacts
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: userenv-dist-wo-onnxdumps
        path: |
           __RUN_TESTS
           !__RUN_TESTS/**/*.onnx
    
    # - name: Lint with flake8
    #   run: |
    #     conda install flake8
    #     # stop the build if there are Python syntax errors or undefined names
    #     flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
    #     # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
    #     flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
